#!/usr/bin/env node

const parseArgs = require('minimist')
const { log, PRINT } = require('../utils/logger')

const args = process.argv.slice(2)
const argv = parseArgs(args, {
  alias: {
    h: 'help'
  },
  boolean: ['h']
})

if (argv.help) {
  PRINT.REMOVE.HELP()
  process.exit()
}

const inquirer = require('inquirer')
const { conf, configs, hasConfig } = require('../utils/config')

const { _: [key] } = argv

;(async () => {
  log()

  if (!hasConfig) {
    log(`No icons files have been configured`, 1)
  } else {
    if (!key) {
      const choices = Object.entries(configs)
        .map(([key, { name }]) => ({ value: key, name }))

      const questions = [{
        type: 'list',
        name: 'name',
        message: 'Select an icon set to remove',
        choices,
      }]

      const answers = await inquirer.prompt(questions)
      log()
      remove(configs[answers.name])
    } else {
      const exists = !!conf.get(key)
      if (exists) {
        remove(configs[key])
      } else {
        log(`No configuration with the key "${key}"`, 1)
      }
    }
  }
  log()
})()

function remove (set) {
  const { name, key } = set
  conf.delete(key)
  log(`Config for "${name}" set has been removed`, 1)
}
