#!/usr/bin/env node

const parseArgs = require('minimist')
const chalk = require('chalk')

const args = process.argv.slice(2)
const argv = parseArgs(args, {
  alias: {
    h: 'help'
  },
  boolean: ['h']
})

if (argv.help) {
  console.log(`
  Description
  Remove an existing icon set config by name

  Usage
    $ glyphs remove [<key>]

  Options
    --help, -h    Displays this message
  `)
  process.exit(0)
}

const Configstore = require('configstore')
const inquirer = require('inquirer')

const pkg = require('../package.json')

const conf = new Configstore(pkg.name)
const { _: [key] } = argv

;(async () => {
  const sets = conf.all

  console.log()

  if (!sets) {
    console.log(`  No icons sets have been configured`)
  } else {
    if (!key) {
      const choices = Object.entries(sets)
        .map(([key, { name }]) => ({ value: key, name }))

      const questions = [{
        type: 'list',
        name: 'name',
        message: 'Select an icon set to remove',
        choices,
      }]

      const answers = await inquirer.prompt(questions)
      console.log()
      remove(sets[answers.name])
    } else {
      const exists = !!conf.get(key)
      if (exists) {
        remove(sets[key])
      } else {
        console.log(`  No configuration with the key "${key}"`)
      }
    }
  }
  console.log()
})()

function remove (set) {
  const { name, key } = set
  conf.delete(key)
  console.log(`  Config for "${name}" set has been removed`)
}
