#!/usr/bin/env node

const parseArgs = require('minimist')
const { log } = require('../utils/logger')
const chalk = require('chalk')

const args = process.argv.slice(2)
const argv = parseArgs(args, {
  alias: {
    h: 'help',
  },
  boolean: ['h']
})

if (argv.help) {
  log(`
  Description
  Get details on the icon set config

  Usage
    $ glyphs get [<key|name>]

  Options
    --help, -h     Displays this message
  `)
  process.exit()
}

const Configstore = require('configstore')
const { camelCase } = require('lodash')
const inquirer = require('inquirer')

const pkg = require('../package.json')

const conf = new Configstore(pkg.name)
const { _: [query] } = argv

;(async () => {
  const configs = conf.all
  const hasConfig = Object.keys(configs).length

  log()

  if (!hasConfig) {
    log('No icon files have been configured', 1)
    log('Run "glyphs add" to configure a new icon file', 1)
    log()
    process.exit(1)
  }

  if (!query && hasConfig) {
    let key
    const choices = Object.entries(configs).map(([key, { name }]) => ({ value: key, name }))

    if (Object.keys(configs).length === 1) {
      key = choices[0].value
    } else {
      const questions = [{
        type: 'list',
        name: 'name',
        message: 'Select an icon set to print config',
        choices,
      }]

      const answers = await inquirer.prompt(questions)
      log()
      key = answers.name
    }

    const setConfig = configs[key]
    log(`${chalk.cyan`File Name`}:     ${setConfig.name}`, 1)
    log(`${chalk.cyan`File Key`}:      ${key}`, 1)
    log(`${chalk.cyan`Access Token`}:  ${setConfig.token}`, 1)
    log(`${chalk.cyan`Direct Link`}:   https://figma.com/file/${key}`, 1)
  } else if (query) {
    const setConfig = query in configs ? configs[query] : Object.values(configs).find(({ name }) => name.toLowerCase().includes(query.toLowerCase()))
    if (setConfig) {
      log(`${chalk.cyan`File Name`}:     ${setConfig.name}`, 1)
      log(`${chalk.cyan`File Key`}:      ${setConfig.key}`, 1)
      log(`${chalk.cyan`Access Token`}:  ${setConfig.token}`, 1)
      log(`${chalk.cyan`Direct Link`}:   https://figma.com/file/${setConfig.key}`, 1)
    } else {
      log(`Can't find the icon set with that name or key`, 1)
    }
  }
  log()
  process.exit()
})();
